create database zebra;
grant all on zebra.* to zreportor@'%' identified by '1234'

CREATE TABLE userInfo (
`id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
`name` VARCHAR(32) NOT NULL,
`email` VARCHAR(40) NOT NULL,
`phone` VARCHAR(16) NOT NULL DEFAULT '',
 PRIMARY KEY(`id`),
 INDEX idx_name(`name`)
) ENGINE = INNODB AUTO_INCREMENT = 1 DEFAULT CHARSET = utf8

insert into userInfo(name,email,phone) values('李长朋','lichangpeng@ku6.com','18310101776')

CREATE TABLE machineInfo (
`id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
`name` VARCHAR(32) NOT NULL,
`province` VARCHAR(32) NOT NULL,
`ip` VARCHAR(32) NOT NULL,
`city` VARCHAR(32) NOT NULL,
`cdnid` INT UNSIGNED NOT NULL,
`cpuNum` SMALLINT UNSIGNED NOT NULL,
`coreNum` SMALLINT UNSIGNED NOT NULL,
`memSum` SMALLINT UNSIGNED NOT NULL,
`diskSum` SMALLINT UNSIGNED NOT NULL,
`ignored` TINYINT NOT NULL DEFAULT 0,
`descs` VARCHAR(32) NOT NULL,
`processList` VARCHAR(64) NOT NULL DEFAULT '',
`userID` INT UNSIGNED NOT NULL DEFAULT 0,
`createtime` TIMESTAMP NOT NULL,
PRIMARY KEY(`id`),
UNIQUE INDEX idx_name(`name`),
INDEX idx_provice(`province`),
INDEX idx_desc(`descs`),
UNIQUE INDEX idx_ip(`ip`)
) ENGINE = INNODB AUTO_INCREMENT = 1 DEFAULT CHARSET = utf8


CREATE TABLE hardware (
`id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
`ip` VARCHAR(32) NOT NULL,
`status` TINYINT NOT NULL DEFAULT 1,
`loadavg` FLOAT NOT NULL DEFAULT 0.0,
`cpuUsage` TINYINT UNSIGNED NOT NULL DEFAULT 0,
`memUsage` TINYINT UNSIGNED NOT NULL DEFAULT 0,
`diskUsage` TINYINT UNSIGNED NOT NULL DEFAULT 0,
`diskLoad` VARCHAR(512) NOT NULL DEFAULT '',
`trafficIn` VARCHAR(32) NOT NULL DEFAULT '0KB',
`trafficOut` VARCHAR(32) NOT NULL DEFAULT '0KB',
`badproc` VARCHAR(128) NOT NULL DEFAULT '',
`lastUptime` TIMESTAMP NOT NULL ON UPDATE CURRENT_TIMESTAMP,
`clientVersion` VARCHAR(16) NOT NULL DEFAULT '',
`sendmail` TINYINT NOT NULL DEFAULT 0,
PRIMARY KEY(`id`),
UNIQUE INDEX idx_ip(`ip`)
) ENGINE = INNODB AUTO_INCREMENT = 1 DEFAULT CHARSET = utf8


//为了便于查询机器的状态,需要增加触发器，可以自动更改status的状态。

DELIMITER $$
CREATE
	TRIGGER `zebra`.`t1` AFTER UPDATE
	ON `zebra`.`hardware`
	FOR EACH ROW BEGIN
	IF @status != 200 THEN
	SET @status = 200;
	END IF;
	IF @lastUptime < NOW() - 300 OR @badproc != '' OR @diskUsage >= 95 THEN
	SET @status = 500;
	END IF;
	IF @sendEmail = 1 AND @status = 200 THEN
	SET @sendEmail = 0;
	END IF;
	END$$
DELIMITER ;
